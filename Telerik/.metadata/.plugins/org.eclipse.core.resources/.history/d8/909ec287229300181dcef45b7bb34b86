package DSA_Practice;
import java.util.Scanner;
import java.util.Map;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
public class Actions {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		String input=sc.nextLine();
		int actionsCount=input.charAt(0);
		int dependeciesCount=input.charAt(2);
		List<Integer>list1=new ArrayList<>();
		List<Integer>list2=new ArrayList<>();
		
		for (int i = 0; i < dependeciesCount; i++) {
			String dependecies=sc.nextLine();
			int a=dependecies.charAt(0);
			int b=dependecies.charAt(2);
			list1.add(a);
			list2.add(b);
		}
		
		m(list1,list2);
		
		
		
	}
	public static void m(List<Integer>list1,List<Integer>list2) {
	  for (int i = 0; i < list1.size(); i++) {
		if (list2.contains(list1.get(i))) {
			
		}
	  }
		
	}
	
	static class GraphAdjacencyList {
		List<List<Integer>>vertices;
		
		public GraphAdjacencyList(int n){
			vertices=new ArrayList<>();
			
			for (int i = 1; i <=n; i++) {
				vertices.add(new ArrayList<>());
			}
		}
		
		public void addEdge(int x,int y) {
			vertices.get(x).add(y);
		
		}

	}
}
