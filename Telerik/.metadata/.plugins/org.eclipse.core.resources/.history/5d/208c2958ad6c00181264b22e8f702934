package RecursionTasks;
import java.util.Scanner;
public class HorsePath {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		
		int size=sc.nextInt();
		int [][]arr=new int[size][size];
		
		findHorsePath(0,0,size,arr,0);
	}
	
	static int[][] findHorsePath(int x,int y,int size,int[][]arr,int counter){
		boolean[][]boolMasiv=new boolean[size][size];
		if (counter==size*size) {
			return arr;
		}
		
		if (x+2<size&&y+1<size&&boolMasiv[x+2][y+1]==false) {
			arr[x+2][y+1]=++counter;
			boolMasiv[x+2][y+1]=true;
			x+=2;
			y+=1;
		}
		else if (x+2<size&&y-1<size&&boolMasiv[x+2][y-1]==false) {
			arr[x+2][y-1]=++counter;
			boolMasiv[x+2][y-1]=true;
			x+=2;
			y-=1;
			
		}
		else if (x+1<size&&y-2<size&&boolMasiv[x+1][y-2]==false) {
			arr[x+1][y-2]=++counter;
			boolMasiv[x+1][y-2]=true;
			x+=1;
			y-=2;
		}
		else if (x-1<size&&y-2<size&&boolMasiv[x-1][y-2]==false) {
			arr[x-1][y-2]=++counter;
			boolMasiv[x-1][y-2]=true;
			x-=1;
			y-=2;
		}
		else if (x+1<size&&y+2<size&&boolMasiv[x+1][y+2]==false) {
			arr[x+1][y+2]=++counter;
			boolMasiv[x+1][y+2]=true;
			x+=1;
			y+=2;
		}
		else if (x-1<size&&y+2<size&&boolMasiv[x-1][y+2]==false) {
			arr[x-1][y+2]=++counter;
			boolMasiv[x-1][y+2]=true;
			x-=1;
			y+=2;
		}
		else if (x-2<size&&y-1<size&&boolMasiv[x-2][y-1]==false) {
			arr[x-2][y-1]=++counter;
			boolMasiv[x-2][y-1]=true;
			x-=2;
			x-=1;
		}
		else if (x-2<size&&y+1<size&&boolMasiv[x-2][y+1]==false) {
			arr[x-2][y+1]=++counter;
			boolMasiv[x-2][y+1]=true;
			x-=2;
			x+=1;
		}
		
	
		return findHorsePath(x,y,size,arr,counter);
		
    }
		
		
	}

